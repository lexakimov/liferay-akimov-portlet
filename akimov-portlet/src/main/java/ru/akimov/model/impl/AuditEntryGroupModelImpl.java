package ru.akimov.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.util.PortalUtil;

import ru.akimov.model.AuditEntryGroup;
import ru.akimov.model.AuditEntryGroupModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the AuditEntryGroup service. Represents a row in the &quot;akimov_audit_action_groups&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link ru.akimov.model.AuditEntryGroupModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link AuditEntryGroupImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see AuditEntryGroupImpl
 * @see ru.akimov.model.AuditEntryGroup
 * @see ru.akimov.model.AuditEntryGroupModel
 * @generated
 */
public class AuditEntryGroupModelImpl extends BaseModelImpl<AuditEntryGroup>
    implements AuditEntryGroupModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a Группа записей аудита model instance should use the {@link ru.akimov.model.AuditEntryGroup} interface instead.
     */
    public static final String TABLE_NAME = "akimov_audit_action_groups";
    public static final Object[][] TABLE_COLUMNS = {
            { "entryGroupId", Types.INTEGER },
            { "companyId", Types.BIGINT },
            { "userId", Types.BIGINT },
            { "userName", Types.VARCHAR },
            { "eventDate", Types.TIMESTAMP }
        };
    public static final String TABLE_SQL_CREATE = "create table akimov_audit_action_groups (entryGroupId INTEGER not null primary key,companyId LONG,userId LONG,userName VARCHAR(75) null,eventDate DATE null)";
    public static final String TABLE_SQL_DROP = "drop table akimov_audit_action_groups";
    public static final String ORDER_BY_JPQL = " ORDER BY auditEntryGroup.entryGroupId ASC";
    public static final String ORDER_BY_SQL = " ORDER BY akimov_audit_action_groups.entryGroupId ASC";
    public static final String DATA_SOURCE = "liferayDataSource";
    public static final String SESSION_FACTORY = "liferaySessionFactory";
    public static final String TX_MANAGER = "liferayTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.ru.akimov.model.AuditEntryGroup"),
            true);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.ru.akimov.model.AuditEntryGroup"),
            true);
    public static final boolean COLUMN_BITMASK_ENABLED = false;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
                "lock.expiration.time.ru.akimov.model.AuditEntryGroup"));
    private static ClassLoader _classLoader = AuditEntryGroup.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            AuditEntryGroup.class
        };
    private int _entryGroupId;
    private long _companyId;
    private long _userId;
    private String _userUuid;
    private String _userName;
    private Date _eventDate;
    private AuditEntryGroup _escapedModel;

    public AuditEntryGroupModelImpl() {
    }

    @Override
    public int getPrimaryKey() {
        return _entryGroupId;
    }

    @Override
    public void setPrimaryKey(int primaryKey) {
        setEntryGroupId(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _entryGroupId;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Integer) primaryKeyObj).intValue());
    }

    @Override
    public Class<?> getModelClass() {
        return AuditEntryGroup.class;
    }

    @Override
    public String getModelClassName() {
        return AuditEntryGroup.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("entryGroupId", getEntryGroupId());
        attributes.put("companyId", getCompanyId());
        attributes.put("userId", getUserId());
        attributes.put("userName", getUserName());
        attributes.put("eventDate", getEventDate());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        Integer entryGroupId = (Integer) attributes.get("entryGroupId");

        if (entryGroupId != null) {
            setEntryGroupId(entryGroupId);
        }

        Long companyId = (Long) attributes.get("companyId");

        if (companyId != null) {
            setCompanyId(companyId);
        }

        Long userId = (Long) attributes.get("userId");

        if (userId != null) {
            setUserId(userId);
        }

        String userName = (String) attributes.get("userName");

        if (userName != null) {
            setUserName(userName);
        }

        Date eventDate = (Date) attributes.get("eventDate");

        if (eventDate != null) {
            setEventDate(eventDate);
        }
    }

    @Override
    public int getEntryGroupId() {
        return _entryGroupId;
    }

    @Override
    public void setEntryGroupId(int entryGroupId) {
        _entryGroupId = entryGroupId;
    }

    @Override
    public long getCompanyId() {
        return _companyId;
    }

    @Override
    public void setCompanyId(long companyId) {
        _companyId = companyId;
    }

    @Override
    public long getUserId() {
        return _userId;
    }

    @Override
    public void setUserId(long userId) {
        _userId = userId;
    }

    @Override
    public String getUserUuid() throws SystemException {
        return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
    }

    @Override
    public void setUserUuid(String userUuid) {
        _userUuid = userUuid;
    }

    @Override
    public String getUserName() {
        if (_userName == null) {
            return StringPool.BLANK;
        } else {
            return _userName;
        }
    }

    @Override
    public void setUserName(String userName) {
        _userName = userName;
    }

    @Override
    public Date getEventDate() {
        return _eventDate;
    }

    @Override
    public void setEventDate(Date eventDate) {
        _eventDate = eventDate;
    }

    @Override
    public AuditEntryGroup toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (AuditEntryGroup) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        AuditEntryGroupImpl auditEntryGroupImpl = new AuditEntryGroupImpl();

        auditEntryGroupImpl.setEntryGroupId(getEntryGroupId());
        auditEntryGroupImpl.setCompanyId(getCompanyId());
        auditEntryGroupImpl.setUserId(getUserId());
        auditEntryGroupImpl.setUserName(getUserName());
        auditEntryGroupImpl.setEventDate(getEventDate());

        auditEntryGroupImpl.resetOriginalValues();

        return auditEntryGroupImpl;
    }

    @Override
    public int compareTo(AuditEntryGroup auditEntryGroup) {
        int primaryKey = auditEntryGroup.getPrimaryKey();

        if (getPrimaryKey() < primaryKey) {
            return -1;
        } else if (getPrimaryKey() > primaryKey) {
            return 1;
        } else {
            return 0;
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof AuditEntryGroup)) {
            return false;
        }

        AuditEntryGroup auditEntryGroup = (AuditEntryGroup) obj;

        int primaryKey = auditEntryGroup.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
    }

    @Override
    public CacheModel<AuditEntryGroup> toCacheModel() {
        AuditEntryGroupCacheModel auditEntryGroupCacheModel = new AuditEntryGroupCacheModel();

        auditEntryGroupCacheModel.entryGroupId = getEntryGroupId();

        auditEntryGroupCacheModel.companyId = getCompanyId();

        auditEntryGroupCacheModel.userId = getUserId();

        auditEntryGroupCacheModel.userName = getUserName();

        String userName = auditEntryGroupCacheModel.userName;

        if ((userName != null) && (userName.length() == 0)) {
            auditEntryGroupCacheModel.userName = null;
        }

        Date eventDate = getEventDate();

        if (eventDate != null) {
            auditEntryGroupCacheModel.eventDate = eventDate.getTime();
        } else {
            auditEntryGroupCacheModel.eventDate = Long.MIN_VALUE;
        }

        return auditEntryGroupCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(11);

        sb.append("{entryGroupId=");
        sb.append(getEntryGroupId());
        sb.append(", companyId=");
        sb.append(getCompanyId());
        sb.append(", userId=");
        sb.append(getUserId());
        sb.append(", userName=");
        sb.append(getUserName());
        sb.append(", eventDate=");
        sb.append(getEventDate());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(19);

        sb.append("<model><model-name>");
        sb.append("ru.akimov.model.AuditEntryGroup");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>entryGroupId</column-name><column-value><![CDATA[");
        sb.append(getEntryGroupId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>companyId</column-name><column-value><![CDATA[");
        sb.append(getCompanyId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>userId</column-name><column-value><![CDATA[");
        sb.append(getUserId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>userName</column-name><column-value><![CDATA[");
        sb.append(getUserName());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>eventDate</column-name><column-value><![CDATA[");
        sb.append(getEventDate());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
